import os
from fastapi import FastAPI, Request
from fastapi.responses import JSONResponse

app = FastAPI(
    title="Trading AI",
    description="AI-–∞–Ω–∞–ª–∏–∑ –≤–∞–ª—é—Ç –∏ –∫—Ä–∏–ø—Ç–æ. –°–∏–≥–Ω–∞–ª—ã –ø–æ –∫–Ω–æ–ø–∫–µ.",
    version="1.0",
)

# –¢–æ–∫–µ–Ω –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
MANUAL_TRIGGER_TOKEN = os.getenv("MANUAL_TRIGGER_TOKEN", "demo-token")
ACTIVE_TRADES = {}

# üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã API
@app.get("/")
async def root():
    return {"message": "üöÄ API —Ä–∞–±–æ—Ç–∞–µ—Ç! –í—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ."}

# üîπ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –æ—Ç Telegram-–±–æ—Ç–∞
@app.post("/trigger-signal")
async def trigger_signal(request: Request):
    try:
        data = await request.json()
        token = data.get("token")
        pair = data.get("pair")
        signal = data.get("signal")

        if token != MANUAL_TRIGGER_TOKEN:
            return JSONResponse(status_code=403, content={"error": "–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞"})

        print(f"üìä –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª: {pair} ‚Üí {signal}")
        ACTIVE_TRADES[pair] = signal

        return {"status": "ok", "message": f"–°–∏–≥–Ω–∞–ª {signal} –¥–ª—è {pair} –ø—Ä–∏–Ω—è—Ç"}

    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏—ë–º–µ —Å–∏–≥–Ω–∞–ª–∞:", e)
        return JSONResponse(status_code=500, content={"error": str(e)})

# üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤
@app.get("/active-trades")
async def active_trades():
    return ACTIVE_TRADES
