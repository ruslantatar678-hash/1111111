import os
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
from fastapi import FastAPI
import logging

# ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BOT_TOKEN = os.getenv("BOT_TOKEN")
API_URL = os.getenv("API_URL", "https://ruslantatar678-hash.onrender.com")  # <-- –¥–æ–±–∞–≤—å —Å—é–¥–∞ —Å–≤–æ–π Render URL

# –ï—Å–ª–∏ API_URL –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –ª–æ–≥–∏—Ä—É–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
if not API_URL or "http" not in API_URL:
    logging.warning(f"‚ö†Ô∏è API_URL –Ω–µ –∑–∞–¥–∞–Ω! –ò—Å–ø–æ–ª—å–∑—É—é –ø—Ä–∏–º–µ—Ä: https://ruslantatar678-hash.onrender.com")
    API_URL = "https://ruslantatar678-hash.onrender.com"

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

app = FastAPI(title="Trading AI", description="AI-–∞–Ω–∞–ª–∏–∑ –≤–∞–ª—é—Ç –∏ –∫—Ä–∏–ø—Ç–æ. –°–∏–≥–Ω–∞–ª—ã –ø–æ –∫–Ω–æ–ø–∫–µ.", version="1.0")


@app.on_event("startup")
async def on_startup():
    await bot.set_webhook(WEBHOOK_URL)
    print(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {WEBHOOK_URL}")

@app.on_event("shutdown")
async def on_shutdown():
    await bot.delete_webhook()
    print("‚ùå Webhook —É–¥–∞–ª—ë–Ω")

@app.post(WEBHOOK_PATH)
async def process_webhook(update: dict):
    telegram_update = types.Update(**update)
    await dp.process_update(telegram_update)
    return {"ok": True}

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.answer("ü§ñ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á—ë–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")



